// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Section05.Relationships.DAL;

#nullable disable

namespace Section05.Relationships.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Section05.Relationships.DAL.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Section05.Relationships.DAL.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentTeacherManyToMany", b =>
                {
                    b.Property<int>("FK__StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherIdNo")
                        .HasColumnType("int");

                    b.Property<int?>("StudentIdNo")
                        .HasColumnType("int");

                    b.HasKey("FK__StudentId", "TeacherIdNo");

                    b.HasIndex("TeacherIdNo");

                    b.ToTable("StudentTeacherManyToMany");
                });

            modelBuilder.Entity("StudentTeacherManyToMany", b =>
                {
                    b.HasOne("Section05.Relationships.DAL.Student", null)
                        .WithMany()
                        .HasForeignKey("FK__StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Section05.Relationships.DAL.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeacherIdNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherId");
                });
#pragma warning restore 612, 618
        }
    }
}
